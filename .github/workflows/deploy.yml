name: GitOps Deploy

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_REGION: europe-west4
  GKE_ZONE: europe-west4-a
  REGISTRY: europe-west4-docker.pkg.dev
  REPOSITORY: my-repository
  BRANCH: ${{ github.ref_name }}
  ARCHITECTURE: linux/amd64
  PING_PONG_IMAGE_TAG: europe-west4-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/ping-pong:${{ github.ref_name }}-${{ github.sha }}-${{ github.run_attempt }}
  LOG_OUTPUT_IMAGE_TAG: europe-west4-docker.pkg.dev/${{ secrets.GKE_PROJECT }}/my-repository/log-output:${{ github.ref_name }}-${{ github.sha }}-${{ github.run_attempt }}
  SKIP_DEPLOY: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Sanitize Branch Name
        id: branch_sanitizer
        run: |
          # Convert branch name to lowercase
          SANITIZED_BRANCH=$(echo "${{ github.ref_name }}" | tr '[:upper:]' '[:lower:]')
          # Replace any characters that are not a-z, 0-9, or - with a hyphen
          SANITIZED_BRANCH=$(echo "$SANITIZED_BRANCH" | sed -E 's/[^a-z0-9-]+/-/g')
          # Remove leading/trailing hyphens and shorten to a maximum of 63 characters
          SANITIZED_BRANCH=$(echo "$SANITIZED_BRANCH" | sed -E 's/^-+|-+$//g' | cut -c1-63)
          # The namespace must start with an alphabet character or a digit
          if [[ ! "$SANITIZED_BRANCH" =~ ^[a-z0-9] ]]; then
              SANITIZED_BRANCH="ns-$SANITIZED_BRANCH"
          fi
          # Set the output variable for the sanitized branch name
          echo "sanitized_name=$SANITIZED_BRANCH" >> $GITHUB_OUTPUT

      - uses: google-github-actions/auth@v3
        with:
          credentials_json: "${{ secrets.GKE_SA_KEY }}"

      - name: "Set up Cloud SDK"
        uses: google-github-actions/setup-gcloud@v3

      - name: "Use gcloud CLI"
        run: gcloud info

      - name: "Configure Docker"
        run: gcloud auth configure-docker $REGISTRY --quiet

      - name: "Get GKE credentials"
        uses: "google-github-actions/get-gke-credentials@v2"
        with:
          cluster_name: "${{ env.GKE_CLUSTER }}"
          project_id: "${{ env.PROJECT_ID }}"
          location: "${{ env.GKE_ZONE }}"

      - name: Set up Docker Buildx
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY != 'true' }}
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.ARCHITECTURE }}


      - name: Build and Push Ping-Pong Image
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY != 'true' }}
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.ARCHITECTURE }}
          context: ./ping-pong/
          push: true
          tags: ${{ env.PING_PONG_IMAGE_TAG }}

      - name: Build and Push Log Output Image
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY != 'true' }}
        uses: docker/build-push-action@v6
        with:
          platforms: ${{ env.ARCHITECTURE }}
          context: ./log-output/
          push: true
          tags: ${{ env.LOG_OUTPUT_IMAGE_TAG }}

      - name: Set up Kustomize
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY != 'true' }}
        uses: imranismail/setup-kustomize@v2.1.0

      - name: Deploy
        if: ${{ github.event_name == 'push' && env.SKIP_DEPLOY != 'true' }}
        run: |-
          cd ./manifests/
          NAMESPACE=${{ steps.branch_sanitizer.outputs.sanitized_name }}
          if [[ "$NAMESPACE" == "main" ]]; then
              NAMESPACE="exercises"
          fi
          kubectl create namespace $NAMESPACE || true
          kubectl config set-context --current --namespace=$NAMESPACE
          kustomize edit set namespace $NAMESPACE
          kustomize edit set image europe-west4-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/ping-pong=$PING_PONG_IMAGE_TAG
          kustomize edit set image europe-west4-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/log-output=$LOG_OUTPUT_IMAGE_TAG
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment log-output -n $NAMESPACE
          kubectl rollout status deployment postgres-db -n $NAMESPACE
          kubectl get services -o wide -n $NAMESPACE

      - name: commit kustomization.yaml to GitHub
        uses: EndBug/add-and-commit@v9
        with:
            add: 'kustomization.yaml'
            message: New version released ${{ github.sha }}